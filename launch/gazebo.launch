<launch>
  <!--**set the arguments in launch file**-->
  <!--**for start gazebo**-->
  <arg name="paused" default="true" />
  <arg name="use_sim_time" default="true" />
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true" />
  <arg name="recording" default="false"/>
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="true"/>
  <!--arg name="world_name" default="$(find mars_rover_2)/urdf/MarsTerrain.world"/-->
  <arg name="world_name" default="$(find mars_rover_2)/urdf/empty.world"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>
  <arg name="enable_ros_network" default="true" />
  <!--**for start <node/>**-->
  <arg name="ShowGazeboInfo" default="true"/>
  <arg name="respawn_gazebo" default="false"/>
  <arg name="server_required" default="false"/>
  <arg name="gui_required" default="false"/>
  <arg name="LidarDataTopicName" default="PandarQT_Data"/>
  <arg name="ShowLidarInfo" default="false" />


  <!--**set the parameters in ros paremeter server**-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mars_rover_2)/urdf/MarsRover.xacro" />
  <!--rosparam file="$(find mars_rover)/config/ROS_Control.yaml" command="load" /-->
  <param name="Speed" type="double" value="0.5" />
  <param name="RotationAngle" type="double" value="0.785398163" />

  <!--**set use_sim_time flag**-->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <group>
    <param name="gazebo/enable_ros_network" value="$(arg enable_ros_network)" />
  </group>

  <!--**set command arguments**-->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>
  <arg unless="$(arg ShowLidarInfo)" name="LidarInfo" value="log" />
  <arg     if="$(arg ShowLidarInfo)" name="LidarInfo" value="screen" />
  <arg unless="$(arg ShowGazeboInfo)" name="GazeboInfo" value="log" />
  <arg     if="$(arg ShowGazeboInfo)" name="GazeboInfo" value="screen" />

  <!--**start gazebo server**-->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="$(arg GazeboInfo)" args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" required="$(arg server_required)" />

  <!--**start gazebo client**-->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="$(arg GazeboInfo)" args="$(arg command_arg3)" required="$(arg gui_required)"/>
  </group>
  
  <!--**spawn a model in mars terrain**-->
   <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" args="-x -1 -y 4 -z 0.9 -R 0 -Y 2.8 -urdf -param robot_description -model MarsRover" respawn="false" output="$(arg GazeboInfo)" />
   <!-- <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" args="-x 2.5 -y 3.5 -z 0.9 -R 0 -P 0 -Y 0 -urdf -param robot_description -model MarsRover" respawn="false" output="$(arg GazeboInfo)" /> -->

  <!--**This package allows you to publish the state of a robot to tf2 by topic joint_state**-->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mars_rover_2)/rviz/rviz.rviz" />

</launch>